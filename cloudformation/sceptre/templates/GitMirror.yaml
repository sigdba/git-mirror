---
AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC into which the function will be deployed

  SubnetId:
    Type: String
    Description: Subnet for EFS access

  JarBucket:
    Type: String
    Description: Name of the S3 bucket containing the function jar file

  JarPath:
    Type: String
    Description: Path to the jar file within the S3 bucket

Resources:
  LambdaFunction:
    Type: AWS::Lambda::Function
    DependsOn:
      - EfsMountTarget
    Properties:
      Code:
        S3Bucket: !Ref JarBucket
        S3Key: !Ref JarPath
      Handler: git_mirror.aws_lambda_handler::handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: java8
      MemorySize: 256
      VpcConfig:
        SecurityGroupIds:
          - !Ref EfsSecurityGroup
        SubnetIds:
          - !Ref SubnetId
      FileSystemConfigs:
        - Arn: !GetAtt EfsAccessPoint.Arn
          LocalMountPath: /mnt/cache

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:*
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - elasticfilesystem:ClientMount
                  - elasticfilesystem:ClientWrite
                Resource: !GetAtt EfsFileSystem.Arn
              - Effect: Allow
                Action:
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                Resource: !GetAtt SqsQueue.Arn

  SqsQueue:
    Type: AWS::SQS::Queue
    Properties:
      ReceiveMessageWaitTimeSeconds: 20

  SqsEventSource:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 1
      EventSourceArn: !GetAtt SqsQueue.Arn
      FunctionName: !GetAtt LambdaFunction.Arn

  EfsFileSystem:
    Type: AWS::EFS::FileSystem
    Properties:
      PerformanceMode: generalPurpose

  EfsAccessPoint:
    Type: AWS::EFS::AccessPoint
    Properties:
      FileSystemId: !Ref EfsFileSystem

  EfsMountTarget:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EfsFileSystem
      SubnetId: !Ref SubnetId
      SecurityGroups:
        - !Ref EfsSecurityGroup

  EfsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: "GitMirror mount target SG"
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: "0.0.0.0/0"
